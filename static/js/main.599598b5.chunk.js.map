{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","showGame","event","element","target","newState","this","scrollTop","setState","gameAreaClass","className","onScroll","e","handleScroll","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA0CeA,E,kDAtCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GAHI,E,gDAOnB,SAAaC,GAEX,IAAIC,EAAUD,EAAME,OAChBC,EAAQ,eAAQC,KAAKN,OACzBK,EAASJ,SAAYE,EAAQI,UAAY,EACzCD,KAAKE,SAASH,K,oBAGhB,WAAU,IAAD,OACHI,EAAgBH,KAAKN,MAAMC,SAAW,2BAA6B,6BAEvE,OACE,qBAAKS,UAAU,SAAf,SACE,qBAAKA,UAAU,iBAAiBC,SAAW,SAACC,GAAD,OAAO,EAAKC,aAAaD,IAApE,SACE,sBAAKF,UAAU,OAAf,UACE,qBAAKA,UAAU,gBACf,qBAAKA,UAAWD,EAAhB,kBACA,sBAAKC,UAAU,cAAf,UACE,qBAAKA,UAAU,gBAAf,eACA,qBAAKA,UAAU,gBAAf,eACA,qBAAKA,UAAU,gBAAf,eACA,qBAAKA,UAAU,gBAAf,kBAEF,qBAAKA,UAAU,cAAf,6B,GA/BMI,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.599598b5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      showGame : true \n    };\n\n  }\n  handleScroll(event)\n  {\n    let element = event.target\n    let newState = { ...this.state };\n    newState.showGame = (element.scrollTop < 5);\n    this.setState(newState);\n\n  }\n  render() {\n    let gameAreaClass = this.state.showGame ? \"game-area game-area-open\" : \"game-area game-area-closed\";\n\n    return (\n      <div className=\"screen\">\n        <div className=\"game-scrollbox\" onScroll= {(e) => this.handleScroll(e)}>\n          <div className=\"game\">\n            <div className=\"header-area\"></div>\n            <div className={gameAreaClass}>aaaa</div>\n            <div className=\"weapon-area\">\n              <div className=\"weapon-button\">1</div>\n              <div className=\"weapon-button\">2</div>\n              <div className=\"weapon-button\">3</div>\n              <div className=\"weapon-button\">4</div>\n            </div>\n            <div className=\"armory-area\">aaaa</div>\n          </div>\n        </div>\n       </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}